---

- name: "fact: zk_server_id (from existing installation)"
  tags: [ update, status ]
  when: zk_server_id is not defined
  ignore_errors: "{{ 'update' in ansible_run_tags }}"
  changed_when: false
  ansible.builtin.slurp:
    src: "{{ zk_myid_path }}"
  register: ctx_myid

- name: "fact: zk_server_id (from existing installation)"
  tags: [ update, status ]
  when: (ctx_myid is defined) and (ctx_myid.content is defined)
  changed_when: false
  ansible.builtin.set_fact:
    zk_server_id: "{{ ctx_myid.content | b64decode | trim | int }}"

- name: "fact: zk_server_id (fallback to 'host_idx')"
  tags: [ always ]
  changed_when: false
  ansible.builtin.set_fact:
    zk_server_id: "{{ hostvars[inventory_hostname]['zk_server_id'] | default(host_idx) | int }}"

- name: "ZooKeeper: verify server id's"
  tags: [ always ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  loop: "{{ ansible_play_batch }}"
  when: (hostvars[item]['zk_server_id'] | int) < 1
  ansible.builtin.fail:
    msg: "{{ item }} has invalid server id: {{ hostvars[item]['zk_server_id'] }}"

- name: "ZooKeeper: verify server id uniqueness"
  tags: [ always ]
  changed_when: false
  loop: "{{ ansible_play_batch }}"
  when: (zk_server_id == hostvars[item]['zk_server_id']) and (inventory_hostname != item)
  ansible.builtin.fail:
    msg: "{{ item }} and {{ inventory_hostname }} are sharing same server id ({{ zk_server_id }})"

- name: "ZooKeeper: determine minimal server id"
  tags: [ always ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  ansible.builtin.set_fact:
    zk_first_server_id: "{{ ansible_play_batch | map('extract', hostvars, 'zk_server_id') | list | min }}"

- tags: [ always ]
  when: (zk_sane_first_server_id | int) > 0
  block:

    - name: "ZooKeeper: verify minimal server id"
      delegate_to: localhost
      run_once: true
      changed_when: false
      when: (zk_first_server_id | int) > (zk_sane_first_server_id | int)
      ansible.builtin.fail:
        msg: "minimal server id is greater than {{ zk_sane_first_server_id }}: {{ zk_first_server_id }}"

# TODO: refactor
- name: "ZooKeeper: Get first server by id"
  tags: [ always ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  loop: "{{ ansible_play_batch }}"
  when: (hostvars[item]['zk_server_id'] == zk_first_server_id)
  ansible.builtin.set_fact:
    zk_first_server: "{{ item }}"
