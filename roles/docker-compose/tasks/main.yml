---

- name: "fact: sysarch"
  tags: [ install, update ]
  changed_when: false
  ansible.builtin.set_fact:
    sysarch: "{{ ansible_system | lower }}-{{ ansible_architecture | lower }}"

- name: "fact: sysarches"
  tags: [ install, update ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  ansible.builtin.set_fact:
    sysarches: "{% for item in ansible_play_batch %}{{ hostvars[item]['sysarch'] }},{% endfor %}"

- name: "fact: sysarches"
  tags: [ install, update ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  ansible.builtin.set_fact:
    sysarches: "{{ sysarches.split(',') | select() | unique }}"

- name: "Docker Compose: verify URIs"
  tags: [ install, update ]
  when: docker_compose_uri_verify | bool
  delegate_to: localhost
  run_once: true
  changed_when: false
  loop: "{{ sysarches }}"
  ansible.builtin.uri:
    url: "{{ docker_compose_uri_prefix }}/docker-compose-{{ item }}"
    method: "HEAD"
  # return_content: true
  register: ctx_uri
  # NB: check against length "10000000" is semi-artificial
  failed_when: (ctx_uri.status != 200) or ((ctx_uri.content_length | int) < 10000000)

- name: "Docker Compose: download binaries to Ansible host"
  tags: [ install, update ]
  delegate_to: localhost
  run_once: true
  changed_when: false
  loop: "{{ sysarches }}"
  ansible.builtin.get_url:
    url: "{{ docker_compose_uri_prefix }}/docker-compose-{{ item }}"
    dest: "./docker-compose-{{ docker_compose_version }}-{{ item }}"
    mode: "0644"
    force: true

- name: "Docker Compose: remove existing binary"
  tags: [ update ]
  ignore_errors: true
  ansible.builtin.file:
    path: "{{ docker_compose_binary }}"
    state: absent

- name: "Docker Compose: copy binary"
  tags: [ install, update ]
  ansible.builtin.copy:
    src: "./docker-compose-{{ docker_compose_version }}-{{ sysarch }}"
    dest: "{{ docker_compose_binary }}"
    owner: root
    group: root
    mode: "0755"

- name: "Ansible: remove temporary files"
  tags: [ install, update ]
  ignore_errors: true
  delegate_to: localhost
  run_once: true
  changed_when: false
  loop: "{{ sysarches }}"
  ansible.builtin.file:
    path: "./docker-compose-{{ docker_compose_version }}-{{ item }}"
    state: absent

- name: "Docker Compose: verify binary"
  tags: [ install, update, status ]
  changed_when: false
  ansible.builtin.command:
    argv:
      - "{{ docker_compose_binary }}"
      - "--version"
  register: ctx_cmd
  failed_when: ctx_cmd.rc != 0
